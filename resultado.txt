Grelha lida do input:
1	1	1	1	1	1	2	3	3	4	4	4
1	2	2	2	2	2	2	5	3	3	3	4
1	2	6	6	7	7	8	5	5	5	3	4
1	2	7	6	6	7	8	9	10	5	3	4
1	2	7	6	7	7	8	9	10	5	5	4
1	2	7	7	7	7	8	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	16	16	16	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
Número de células por região:
 - Região 6: 5 células
 - Região 3: 7 células
 - Região 4: 7 células
 - Região 16: 7 células
 - Região 5: 8 células
 - Região 8: 8 células
 - Região 11: 8 células
 - Região 9: 9 células
 - Região 14: 9 células
 - Região 15: 9 células
 - Região 1: 11 células
 - Região 2: 11 células
 - Região 10: 11 células
 - Região 13: 11 células
 - Região 12: 12 células
 - Região 7: 11 células

Ações válidas no estado atual:
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 3: [(3, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(2, 10), (1, 10), (1, 9), (1, 8)]), (3, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(1, 9), (1, 10), (2, 10), (3, 10)]), (3, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(0, 8), (1, 8), (1, 9), (1, 10)]), (3, 'S', [(0, 0), (0, -1), (-1, -1), (-1, -2)], 0, [(1, 9), (1, 8), (0, 8), (0, 7)])], 4: [(4, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(1, 11), (0, 11), (0, 10), (0, 9)]), (4, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(0, 10), (0, 11), (1, 11), (2, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(3, 9), (2, 9), (2, 8), (2, 7)]), (5, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(2, 8), (2, 9), (3, 9), (4, 9)]), (5, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(1, 7), (2, 7), (2, 8), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, -1), (1, 0), (2, 0)], 1, [(3, 5), (4, 4), (4, 5), (5, 5)]), (7, 'S', [(0, 0), (1, -1), (1, 0), (2, -1)], 3, [(3, 5), (4, 4), (4, 5), (5, 4)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 3: [(3, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(2, 10), (1, 10), (1, 9), (1, 8)]), (3, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(1, 9), (1, 10), (2, 10), (3, 10)]), (3, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(0, 8), (1, 8), (1, 9), (1, 10)]), (3, 'S', [(0, 0), (0, -1), (-1, -1), (-1, -2)], 0, [(1, 9), (1, 8), (0, 8), (0, 7)])], 4: [(4, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(1, 11), (0, 11), (0, 10), (0, 9)]), (4, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(0, 10), (0, 11), (1, 11), (2, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(3, 9), (2, 9), (2, 8), (2, 7)]), (5, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(2, 8), (2, 9), (3, 9), (4, 9)]), (5, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(1, 7), (2, 7), (2, 8), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 3: [(3, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(2, 10), (1, 10), (1, 9), (1, 8)]), (3, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(1, 9), (1, 10), (2, 10), (3, 10)]), (3, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(0, 8), (1, 8), (1, 9), (1, 10)]), (3, 'S', [(0, 0), (0, -1), (-1, -1), (-1, -2)], 0, [(1, 9), (1, 8), (0, 8), (0, 7)])], 4: [(4, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(1, 11), (0, 11), (0, 10), (0, 9)]), (4, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(0, 10), (0, 11), (1, 11), (2, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(3, 9), (2, 9), (2, 8), (2, 7)]), (5, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(2, 8), (2, 9), (3, 9), (4, 9)]), (5, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(1, 7), (2, 7), (2, 8), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
Região 6 -> peça L com forma [(0, 0), (0, 1), (1, 1), (2, 1)] na posição [(2, 2), (2, 3), (3, 3), (4, 3)]
Região 6 -> peça T com forma [(0, 0), (1, 0), (1, 1), (2, 0)] na posição [(2, 3), (3, 3), (3, 4), (4, 3)]
Região 6 -> peça S com forma [(0, 0), (0, -1), (-1, -1), (-1, -2)] na posição [(3, 4), (3, 3), (2, 3), (2, 2)]

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	3	3	4	4	4
1	2	2	2	2	2	2	5	3	3	3	4
1	2	6	6	7	7	8	5	5	5	3	4
1	2	7	6	6	7	8	9	10	5	3	4
1	2	7	6	7	7	8	9	10	5	5	4
1	2	7	7	7	7	8	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	16	16	16	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 0 / 0

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: True
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 3: [(3, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(2, 10), (1, 10), (1, 9), (1, 8)]), (3, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(1, 9), (1, 10), (2, 10), (3, 10)]), (3, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(0, 8), (1, 8), (1, 9), (1, 10)]), (3, 'S', [(0, 0), (0, -1), (-1, -1), (-1, -2)], 0, [(1, 9), (1, 8), (0, 8), (0, 7)])], 4: [(4, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(1, 11), (0, 11), (0, 10), (0, 9)]), (4, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(0, 10), (0, 11), (1, 11), (2, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(3, 9), (2, 9), (2, 8), (2, 7)]), (5, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(2, 8), (2, 9), (3, 9), (4, 9)]), (5, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(1, 7), (2, 7), (2, 8), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, -1), (1, 0), (2, 0)], 1, [(3, 5), (4, 4), (4, 5), (5, 5)]), (7, 'S', [(0, 0), (1, -1), (1, 0), (2, -1)], 3, [(3, 5), (4, 4), (4, 5), (5, 4)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 3: [(3, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(2, 10), (1, 10), (1, 9), (1, 8)]), (3, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(1, 9), (1, 10), (2, 10), (3, 10)]), (3, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(0, 8), (1, 8), (1, 9), (1, 10)]), (3, 'S', [(0, 0), (0, -1), (-1, -1), (-1, -2)], 0, [(1, 9), (1, 8), (0, 8), (0, 7)])], 4: [(4, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(1, 11), (0, 11), (0, 10), (0, 9)]), (4, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(0, 10), (0, 11), (1, 11), (2, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(3, 9), (2, 9), (2, 8), (2, 7)]), (5, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(2, 8), (2, 9), (3, 9), (4, 9)]), (5, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(1, 7), (2, 7), (2, 8), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 3: [(3, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(2, 10), (1, 10), (1, 9), (1, 8)]), (3, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(1, 9), (1, 10), (2, 10), (3, 10)]), (3, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(0, 8), (1, 8), (1, 9), (1, 10)]), (3, 'S', [(0, 0), (0, -1), (-1, -1), (-1, -2)], 0, [(1, 9), (1, 8), (0, 8), (0, 7)])], 4: [(4, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(1, 11), (0, 11), (0, 10), (0, 9)]), (4, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(0, 10), (0, 11), (1, 11), (2, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(3, 9), (2, 9), (2, 8), (2, 7)]), (5, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(2, 8), (2, 9), (3, 9), (4, 9)]), (5, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(1, 7), (2, 7), (2, 8), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 3: [(3, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(2, 10), (1, 10), (1, 9), (1, 8)]), (3, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(1, 9), (1, 10), (2, 10), (3, 10)]), (3, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(0, 8), (1, 8), (1, 9), (1, 10)]), (3, 'S', [(0, 0), (0, -1), (-1, -1), (-1, -2)], 0, [(1, 9), (1, 8), (0, 8), (0, 7)])], 4: [(4, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(1, 11), (0, 11), (0, 10), (0, 9)]), (4, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(0, 10), (0, 11), (1, 11), (2, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(3, 9), (2, 9), (2, 8), (2, 7)]), (5, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(2, 8), (2, 9), (3, 9), (4, 9)]), (5, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(1, 7), (2, 7), (2, 8), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, -1), (1, 0), (2, 0)], 1, [(3, 5), (4, 4), (4, 5), (5, 5)]), (7, 'S', [(0, 0), (1, -1), (1, 0), (2, -1)], 3, [(3, 5), (4, 4), (4, 5), (5, 4)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 3: [(3, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(2, 10), (1, 10), (1, 9), (1, 8)]), (3, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(1, 9), (1, 10), (2, 10), (3, 10)]), (3, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(0, 8), (1, 8), (1, 9), (1, 10)]), (3, 'S', [(0, 0), (0, -1), (-1, -1), (-1, -2)], 0, [(1, 9), (1, 8), (0, 8), (0, 7)])], 4: [(4, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(1, 11), (0, 11), (0, 10), (0, 9)]), (4, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(0, 10), (0, 11), (1, 11), (2, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(3, 9), (2, 9), (2, 8), (2, 7)]), (5, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(2, 8), (2, 9), (3, 9), (4, 9)]), (5, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(1, 7), (2, 7), (2, 8), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 3: [(3, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(2, 10), (1, 10), (1, 9), (1, 8)]), (3, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(1, 9), (1, 10), (2, 10), (3, 10)]), (3, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(0, 8), (1, 8), (1, 9), (1, 10)]), (3, 'S', [(0, 0), (0, -1), (-1, -1), (-1, -2)], 0, [(1, 9), (1, 8), (0, 8), (0, 7)])], 4: [(4, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(1, 11), (0, 11), (0, 10), (0, 9)]), (4, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(0, 10), (0, 11), (1, 11), (2, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(3, 9), (2, 9), (2, 8), (2, 7)]), (5, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(2, 8), (2, 9), (3, 9), (4, 9)]), (5, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(1, 7), (2, 7), (2, 8), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	3	3	4	4	4
1	2	2	2	X	2	2	5	3	3	3	4
1	2	S	S	7	7	8	5	5	5	3	4
1	2	7	S	S	7	8	9	10	5	3	4
1	2	7	6	X	7	8	9	10	5	5	4
1	2	7	7	7	7	8	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	16	16	16	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 4

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: True
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 4: [], 5: [(5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 4: [], 5: [], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 4: [(4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 4: [(4, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(0, 10), (0, 11), (1, 11), (2, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 4: [(4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 4: [(4, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(0, 10), (0, 11), (1, 11), (2, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 11), (1, 11), (2, 11), (3, 11)]), (4, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 11), (2, 11), (3, 11), (4, 11)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	4
1	2	S	S	7	7	8	5	5	X	3	4
1	2	7	S	S	7	8	9	10	5	3	4
1	2	7	6	X	7	8	9	10	5	5	4
1	2	7	7	7	7	8	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	16	16	16	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 8

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(11, 1), (11, 0), (10, 0), (9, 0)]), (13, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(10, 0), (11, 0), (11, 1), (11, 2)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 0), (8, 0), (9, 0), (10, 0)]), (13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 0), (9, 0), (10, 0), (11, 0)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 0), (11, 1), (11, 2), (11, 3)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 1), (11, 2), (11, 3), (11, 4)]), (13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(9, 3), (9, 2), (8, 2), (7, 2)]), (14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)]), (14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)]), (14, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(8, 2), (9, 2), (9, 3), (9, 4)]), (14, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 2), (7, 2), (8, 2), (9, 2)]), (14, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 2), (9, 3), (9, 4), (9, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])], 16: [(16, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(10, 2), (10, 1), (9, 1), (8, 1)]), (16, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(9, 1), (10, 1), (10, 2), (10, 3)]), (16, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 1), (8, 1), (9, 1), (10, 1)]), (16, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 1), (10, 2), (10, 3), (10, 4)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	8	5	5	X	3	I
1	2	7	S	S	7	8	9	10	5	3	I
1	2	7	6	X	7	8	9	10	5	5	I
1	2	7	7	7	7	8	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	16	16	16	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 12

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(2, 1), (1, 1), (1, 2), (1, 3)]), (2, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(1, 2), (1, 1), (2, 1), (3, 1)]), (2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 1), (1, 2), (1, 3), (1, 4)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 2), (1, 3), (1, 4), (1, 5)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 5: [(5, 'L', [(0, 0), (0, -1), (-1, -1), (-2, -1)], 2, [(4, 10), (4, 9), (3, 9), (2, 9)]), (5, 'S', [(0, 0), (1, 0), (1, 1), (2, 1)], 1, [(3, 9), (4, 9), (4, 10), (5, 10)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 8), (4, 8), (5, 8), (6, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	8	5	5	X	3	I
1	2	7	S	S	7	8	9	10	5	3	I
1	2	7	6	X	7	8	9	10	5	5	I
1	2	7	7	7	7	8	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 16

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	8	5	5	X	3	I
1	2	7	S	S	7	8	9	10	S	X	I
1	2	7	6	X	7	8	9	10	S	S	I
1	2	7	7	7	7	8	9	10	X	S	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 20

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)])], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	X	3	I
1	2	7	S	S	7	I	9	10	S	X	I
1	2	7	6	X	7	I	9	10	S	S	I
1	2	7	7	7	7	I	9	10	X	S	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 24

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	8	5	5	L	3	I
1	2	7	S	S	7	8	9	10	L	X	I
1	2	7	6	X	7	8	9	10	L	L	I
1	2	7	7	7	7	8	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 12 / 20

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)])], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 12 / 24

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	9	10	I	5	12
13	14	14	8	8	8	8	9	10	I	15	12
13	16	14	9	9	9	9	9	10	I	15	12
13	16	14	10	10	10	10	10	10	I	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 28

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	9	10	I	5	12
13	L	L	8	8	8	8	9	10	I	15	12
13	X	L	9	9	9	9	9	10	I	15	12
13	16	L	10	10	10	10	10	10	I	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 32

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
13	L	L	8	8	8	X	L	10	I	15	12
13	X	L	9	9	9	L	L	10	I	15	12
13	16	L	10	10	10	10	10	10	I	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 36

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
13	L	L	8	8	8	X	L	10	I	15	12
13	X	L	9	9	9	L	L	10	I	15	12
13	16	L	10	10	10	10	10	10	I	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 40

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	10	10	10	10	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 44

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 48

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 32 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 32 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 36 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 48 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
13	L	L	8	8	8	X	L	10	I	15	12
13	X	L	9	9	9	L	L	10	I	15	12
13	16	L	10	10	10	10	10	10	I	15	12
13	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 40

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	10	10	10	10	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 44

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 48

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 32 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 32 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 36 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 32 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 36 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 32 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 36 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 32 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 36 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 32 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 36 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 48 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 48 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 48 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 48 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 48 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	11	15	I
13	I	I	I	I	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	12
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	11	15	L
13	I	I	I	I	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
13	L	L	8	8	8	X	L	10	I	15	12
13	X	L	9	9	9	L	L	10	I	15	12
13	16	L	10	10	10	10	10	10	I	15	12
13	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 40

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	10	10	10	10	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 44

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 48

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 32 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 32 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 36 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 40 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 48 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	16	14	14	14	14	11	11	11	X	L	I
13	I	I	I	I	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
13	L	L	8	8	8	X	L	10	I	15	12
13	X	L	9	9	9	L	L	10	I	15	12
13	16	L	10	10	10	10	10	10	I	L	12
13	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 20 / 40

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	10	10	10	10	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 20 / 44

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 20 / 48

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 20 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 32 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 32 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 36 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 20 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 52 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 60 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 56 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	16	14	14	14	14	11	11	11	X	L	12
13	I	I	I	I	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	8	5	5	X	3	I
1	2	7	S	S	7	8	9	10	5	3	I
1	2	7	6	X	7	8	9	10	5	5	I
1	2	7	7	7	7	8	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	I	14	9	9	9	9	9	10	11	15	12
13	I	14	10	10	10	10	10	10	11	15	12
13	I	14	14	14	14	11	11	11	11	15	12
13	I	16	16	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 16

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	8	5	5	X	3	I
1	2	7	S	S	7	8	9	10	S	X	I
1	2	7	6	X	7	8	9	10	S	S	I
1	2	7	7	7	7	8	9	10	X	S	12
13	14	14	8	8	8	8	9	10	11	15	12
13	I	14	9	9	9	9	9	10	11	15	12
13	I	14	10	10	10	10	10	10	11	15	12
13	I	14	14	14	14	11	11	11	11	15	12
13	I	16	16	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 20

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)])], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	X	3	I
1	2	7	S	S	7	I	9	10	S	X	I
1	2	7	6	X	7	I	9	10	S	S	I
1	2	7	7	7	7	I	9	10	X	S	12
13	14	14	8	8	8	8	9	10	11	15	12
13	I	14	9	9	9	9	9	10	11	15	12
13	I	14	10	10	10	10	10	10	11	15	12
13	I	14	14	14	14	11	11	11	11	15	12
13	I	16	16	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 24

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: []}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	8	5	5	L	3	I
1	2	7	S	S	7	8	9	10	L	X	I
1	2	7	6	X	7	8	9	10	L	L	I
1	2	7	7	7	7	8	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	I	14	9	9	9	9	9	10	11	15	12
13	I	14	10	10	10	10	10	10	11	15	12
13	I	14	14	14	14	11	11	11	11	15	12
13	I	16	16	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 12 / 20

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)])], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	I	14	9	9	9	9	9	10	11	15	12
13	I	14	10	10	10	10	10	10	11	15	12
13	I	14	14	14	14	11	11	11	11	15	12
13	I	16	16	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 12 / 24

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 14: [(14, 'L', [(0, 0), (-1, 0), (-1, -1), (-1, -2)], 3, [(10, 5), (9, 5), (9, 4), (9, 3)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	9	10	I	5	12
13	14	14	8	8	8	8	9	10	I	15	12
13	I	14	9	9	9	9	9	10	I	15	12
13	I	14	10	10	10	10	10	10	I	15	12
13	I	14	14	14	14	11	11	11	11	15	12
13	I	16	16	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 28

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 2), (11, 3), (11, 4), (11, 5)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	8	5	5	X	3	I
1	2	7	S	S	7	8	9	10	5	3	I
1	2	7	6	X	7	8	9	10	5	5	I
1	2	7	7	7	7	8	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 16

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(5, 4), (5, 5), (4, 5), (3, 5)]), (7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 5), (5, 5), (5, 4), (5, 3)]), (7, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 5), (3, 5), (4, 5), (5, 5)]), (7, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(5, 2), (5, 3), (5, 4), (5, 5)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 8: [(8, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(6, 5), (6, 6), (5, 6), (4, 6)]), (8, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(5, 6), (6, 6), (6, 5), (6, 4)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 6), (3, 6), (4, 6), (5, 6)]), (8, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 6), (4, 6), (5, 6), (6, 6)]), (8, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(6, 3), (6, 4), (6, 5), (6, 6)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(3, 7), (4, 7), (5, 7), (6, 7)]), (9, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 7), (5, 7), (6, 7), (7, 7)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	8	5	5	X	3	I
1	2	7	S	S	7	8	9	10	S	X	I
1	2	7	6	X	7	8	9	10	S	S	I
1	2	7	7	7	7	8	9	10	X	S	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 20

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)])], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	X	3	I
1	2	7	S	S	7	I	9	10	S	X	I
1	2	7	6	X	7	I	9	10	S	S	I
1	2	7	7	7	7	I	9	10	X	S	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 24

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 11), (6, 11), (7, 11), (8, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	8	5	5	L	3	I
1	2	7	S	S	7	8	9	10	L	X	I
1	2	7	6	X	7	8	9	10	L	L	I
1	2	7	7	7	7	8	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 12 / 20

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)])], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [], 9: [], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(8, 7), (8, 8), (7, 8), (6, 8)]), (10, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(7, 8), (8, 8), (8, 7), (8, 6)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 8), (6, 8), (7, 8), (8, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 5), (8, 6), (8, 7), (8, 8)])], 11: [(11, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(9, 8), (9, 9), (8, 9), (7, 9)]), (11, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(8, 9), (9, 9), (9, 8), (9, 7)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(5, 9), (6, 9), (7, 9), (8, 9)]), (11, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 9), (7, 9), (8, 9), (9, 9)]), (11, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(9, 6), (9, 7), (9, 8), (9, 9)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 10), (7, 10), (8, 10), (9, 10)]), (15, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 10), (8, 10), (9, 10), (10, 10)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	9	10	11	5	12
13	14	14	8	8	8	8	9	10	11	15	12
13	16	14	9	9	9	9	9	10	11	15	12
13	16	14	10	10	10	10	10	10	11	15	12
13	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 12 / 24

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(4, 8), (5, 8), (6, 8), (7, 8)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: []}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 14: [(14, 'L', [(0, 0), (0, 1), (1, 1), (2, 1)], 5, [(6, 1), (6, 2), (7, 2), (8, 2)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	9	10	I	5	12
13	14	14	8	8	8	8	9	10	I	15	12
13	16	14	9	9	9	9	9	10	I	15	12
13	16	14	10	10	10	10	10	10	I	15	12
13	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 28

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 9: [(9, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(7, 6), (7, 7), (6, 7), (5, 7)]), (9, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(6, 7), (7, 7), (7, 6), (7, 5)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 3), (7, 4), (7, 5), (7, 6)]), (9, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(7, 4), (7, 5), (7, 6), (7, 7)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)]), (10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 4), (8, 5), (8, 6), (8, 7)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	9	10	I	5	12
13	L	L	8	8	8	8	9	10	I	15	12
13	X	L	9	9	9	9	9	10	I	15	12
13	16	L	10	10	10	10	10	10	I	15	12
13	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 32

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 7), (11, 8), (11, 9), (11, 10)]), (12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 8), (11, 9), (11, 10), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])], 15: [(15, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(10, 9), (10, 10), (9, 10), (8, 10)]), (15, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(9, 10), (10, 10), (10, 9), (10, 8)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 6), (10, 7), (10, 8), (10, 9)]), (15, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(10, 7), (10, 8), (10, 9), (10, 10)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
13	L	L	8	8	8	X	L	10	I	15	12
13	X	L	9	9	9	L	L	10	I	15	12
13	16	L	10	10	10	10	10	10	I	15	12
13	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	15	15	15	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 36

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])], 13: [(13, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 0), (7, 0), (8, 0), (9, 0)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
13	L	L	8	8	8	X	L	10	I	15	12
13	X	L	9	9	9	L	L	10	I	15	12
13	16	L	10	10	10	10	10	10	I	15	12
13	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 40

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	10	10	10	10	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 44

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 48

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 36 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 36 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 40 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 56 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	15	I	I	I	I	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
13	L	L	8	8	8	X	L	10	I	15	12
13	X	L	9	9	9	L	L	10	I	15	12
13	16	L	10	10	10	10	10	10	I	15	12
13	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 40

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	10	10	10	10	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 44

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 48

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 36 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 36 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 40 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 36 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 40 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 36 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 40 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 36 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 40 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 36 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 40 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'L', [(0, 0), (0, 1), (-1, 1), (-2, 1)], 4, [(11, 10), (11, 11), (10, 11), (9, 11)]), (12, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(10, 11), (11, 11), (11, 10), (11, 9)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(7, 11), (8, 11), (9, 11), (10, 11)]), (12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(8, 11), (9, 11), (10, 11), (11, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 56 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 56 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 56 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 56 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 56 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	I
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	I
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	11	15	I
13	L	L	L	16	14	I	I	I	I	15	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	12
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	L	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	11	15	L
13	L	L	L	16	14	I	I	I	I	X	L
13	13	13	13	13	13	12	12	12	12	L	L
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
13	L	L	8	8	8	X	L	10	I	15	12
13	X	L	9	9	9	L	L	10	I	15	12
13	16	L	10	10	10	10	10	10	I	15	12
13	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 40

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	10	10	10	10	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 44

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 48

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 36 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 36 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 40 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 16 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(6, 11), (7, 11), (8, 11), (9, 11)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 56 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 44 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
I	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 52 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	1	1	1	1	X	L	S	S	4	4	4
I	2	2	2	L	L	L	5	S	S	3	I
I	2	S	S	7	7	I	5	5	L	3	I
I	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
L	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	15	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	X	L	S	S	4	4	4
L	X	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	I
I	X	L	9	9	9	L	L	10	I	15	I
I	16	L	I	I	I	I	10	10	I	15	I
I	L	X	14	14	14	11	11	11	X	L	I
13	L	L	L	16	14	15	15	L	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
13	L	L	8	8	8	X	L	10	I	15	12
13	X	L	9	9	9	L	L	10	I	15	12
13	16	L	10	10	10	10	10	10	I	L	12
13	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 20 / 40

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 10: [(10, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(8, 3), (8, 4), (8, 5), (8, 6)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	10	10	10	10	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 20 / 44

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 0), (3, 0), (4, 0), (5, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 2: [(2, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(0, 6), (1, 6), (1, 5), (1, 4)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 1), (2, 1), (3, 1), (4, 1)]), (2, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(2, 1), (3, 1), (4, 1), (5, 1)]), (2, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(1, 3), (1, 4), (1, 5), (1, 6)])], 7: [(7, 'L', [(0, 0), (1, 0), (1, 1), (1, 2)], 6, [(4, 2), (5, 2), (5, 3), (5, 4)]), (7, 'L', [(0, 0), (1, 0), (1, -1), (1, -2)], 7, [(4, 4), (5, 4), (5, 3), (5, 2)]), (7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 20 / 48

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(0, 0), (1, 0), (2, 0), (3, 0)]), (1, 'I', [(0, 0), (1, 0), (2, 0), (3, 0)], 0, [(1, 0), (2, 0), (3, 0), (4, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {1: [(1, 'L', [(0, 0), (-1, 0), (-1, 1), (-1, 2)], 0, [(1, 0), (0, 0), (0, 1), (0, 2)]), (1, 'L', [(0, 0), (0, -1), (1, -1), (2, -1)], 1, [(0, 1), (0, 0), (1, 0), (2, 0)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 0), (0, 1), (0, 2), (0, 3)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 1), (0, 2), (0, 3), (0, 4)]), (1, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(0, 2), (0, 3), (0, 4), (0, 5)])], 7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 20 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
I	I	I	I	1	1	2	S	S	4	4	4
1	2	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 36 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
Total de peças conectadas: 36 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	1	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
L	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a S
  -> I conectado a T
  -> S conectado a T
Total de peças conectadas: 40 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	I	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
L	L	L	1	1	1	2	S	S	4	4	4
L	X	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	I	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	1	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 20 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	1	I	I	I	I	2	S	S	4	4	4
1	I	2	2	X	2	2	5	S	S	3	I
1	I	S	S	7	7	I	5	5	L	3	I
1	I	7	S	S	7	I	9	10	L	X	I
1	I	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
Total de peças conectadas: 4 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True

[DEBUG] Estado atual do tabuleiro:
1	1	1	1	1	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 48 / 52

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])], 12: [(12, 'I', [(0, 0), (0, 1), (0, 2), (0, 3)], 1, [(11, 6), (11, 7), (11, 8), (11, 9)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	12	12	12	12	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 52 / 56

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}
[DEBUG] regions_actions_list: {7: [(7, 'T', [(0, 0), (1, 0), (1, 1), (1, -1)], 2, [(4, 4), (5, 4), (5, 5), (5, 3)])]}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	6	X	7	I	9	10	L	L	I
1	2	7	7	7	7	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> L conectado a S
Total de peças conectadas: 56 / 60

Goal Test Results:
- Todas regiões têm peça: False
- Sem blocos 2x2: True
- Peças conectadas: False
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 64 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: True
- Sem peças iguais adjacentes: True
[DEBUG] regions_actions_list: {}

[DEBUG] Estado atual do tabuleiro:
1	I	I	I	I	X	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	X	I
1	2	7	X	T	X	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	X	L	10	I	15	12
I	X	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	X	14	14	14	11	11	11	X	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12
[DEBUG] Peças conectadas ortogonalmente:
  -> I conectado a L
  -> I conectado a T
  -> L conectado a S
  -> S conectado a T
Total de peças conectadas: 64 / 64

Goal Test Results:
- Todas regiões têm peça: True
- Sem blocos 2x2: True
- Peças conectadas: True
- Sem peças iguais adjacentes: True
A testar com DFS...
  Programa executado em 2.7126 segundos
  Memória usada: 1240 kB
  Nós gerados: 363
  Nós expandidos: 352

Solução encontrada:
1	I	I	I	I	1	L	S	S	4	4	4
1	2	2	2	L	L	L	5	S	S	3	I
1	2	S	S	7	7	I	5	5	L	3	I
1	2	7	S	S	7	I	9	10	L	3	I
1	2	7	6	T	7	I	9	10	L	L	I
1	2	7	T	T	T	I	L	10	I	5	12
I	L	L	8	8	8	8	L	10	I	15	12
I	16	L	9	9	9	L	L	10	I	15	12
I	16	L	I	I	I	I	10	10	I	L	12
I	L	14	14	14	14	11	11	11	11	L	12
13	L	L	L	16	14	15	15	15	L	L	12
13	13	13	13	13	13	I	I	I	I	12	12         1515698 function calls (1509194 primitive calls) in 2.719 seconds

   Ordered by: cumulative time
   List reduced from 100 to 30 due to restriction <30>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.002    0.002    2.719    2.719 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:784(main)
        1    0.003    0.003    2.683    2.683 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\search.py:216(depth_first_graph_search)
      352    0.001    0.000    1.993    0.006 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\search.py:94(expand)
      353    0.007    0.000    1.526    0.004 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:324(actions)
      352    0.001    0.000    1.500    0.004 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\search.py:1528(actions)
      972    0.698    0.001    1.344    0.001 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:364(result)
      540    0.010    0.000    0.963    0.002 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:623(goal_test)
      353    0.000    0.000    0.620    0.002 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\search.py:1536(goal_test)
      972    0.005    0.000    0.548    0.001 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:420(_update_adjacent_actions)
     1394    0.438    0.000    0.522    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:158(adjacent_regions)
      363    0.001    0.000    0.492    0.001 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\search.py:99(child_node)
      363    0.001    0.000    0.490    0.001 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\search.py:1532(result)
      540    0.349    0.001    0.443    0.001 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:527(_has_no_2x2_blocks)
      540    0.143    0.000    0.266    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:545(_is_connected)
     5095    0.184    0.000    0.254    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:485(_would_create_2x2_block)
      422    0.002    0.000    0.203    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:351(_has_future_solutions)
   121020    0.085    0.000    0.181    0.000 {built-in method builtins.all}
      540    0.165    0.000    0.181    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:602(_no_same_piece_adjacent)
     2585    0.008    0.000    0.173    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:440(_is_action_still_valid)
     5084    0.006    0.000    0.165    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:467(is_valid_action)
     6316    0.054    0.000    0.072    0.000 {built-in method builtins.print}
     6593    0.063    0.000    0.067    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:504(_would_touch_equal_piece)
   768785    0.065    0.000    0.065    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:149(get_value)
     2746    0.005    0.000    0.064    0.000 {built-in method builtins.any}
      352    0.001    0.000    0.062    0.000 {method 'extend' of 'list' objects}
      715    0.002    0.000    0.061    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\search.py:233(<genexpr>)
     4188    0.006    0.000    0.055    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\search.py:122(__eq__)
    92897    0.052    0.000    0.052    0.000 {built-in method builtins.len}
    94238    0.048    0.000    0.052    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:495(<genexpr>)
     4188    0.012    0.000    0.048    0.000 C:\Users\kikof\Documents\Uni Prog\IA\IA25\src\nuruomino2.py:91(__eq__)


